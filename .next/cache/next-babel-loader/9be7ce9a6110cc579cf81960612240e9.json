{"ast":null,"code":"import { createElement as _createElement } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/victorzapata/projects/personal/react/conference/components/Speakers/index.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from \"axios\";\nimport { useEffect, useReducer, useState } from \"react\";\nimport Speaker from \"../Speaker\";\nimport SpeakerSearchBar from \"../SpeakerSearchBar\";\n\nconst Speakers = () => {\n  const REQUEST_STATUS = {\n    LOADING: \"loading\",\n    SUCCESS: \"success\",\n    ERROR: \"error\"\n  };\n\n  const reducer = (state, action) => {\n    switch (action.type) {\n      case \"GET_ALL_SUCCESS\":\n        return _objectSpread(_objectSpread({}, state), {}, {\n          speakers: action.speakers\n        });\n\n      case \"UPDATE_STATUS\":\n        return _objectSpread(_objectSpread({}, state), {}, {\n          status: action.status\n        });\n    }\n  };\n\n  const {\n    0: {\n      speakers,\n      status\n    },\n    1: dispatch\n  } = useReducer(reducer, []);\n  const {\n    0: error,\n    1: setError\n  } = useState({});\n  const {\n    0: searchQuery,\n    1: setSearchQuery\n  } = useState(\"\");\n  const isSuccess = status === REQUEST_STATUS.SUCCESS;\n  const isError = status === REQUEST_STATUS.ERROR;\n  const isLoading = status === REQUEST_STATUS.LOADING;\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const result = await axios.get(\"http://localhost:4000/speakers\");\n        dispatch({\n          speakers: result.data,\n          type: \"GET_ALL_SUCCESS\"\n        });\n        dispatch({\n          status: REQUEST_STATUS.SUCCESS,\n          type: \"UPDATE_STATUS\"\n        });\n      } catch (e) {\n        dispatch({\n          status: REQUEST_STATUS.ERROR,\n          type: \"UPDATE_STATUS\"\n        });\n        setError(e);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const toggleFavSpeaker = currentSpeaker => {\n    return _objectSpread(_objectSpread({}, currentSpeaker), {}, {\n      isFavorite: !currentSpeaker.isFavorite\n    });\n  };\n\n  const onFavoriteToggleHandler = async speaker => {\n    //1. Found the speaker, get the reference\n    //2. Remove it\n    //3. Put the new one at the same place.\n    const index = speakers.indexOf(speaker);\n    const newSpeaker = toggleFavSpeaker(speaker);\n\n    try {\n      await axios.put(`http://localhost:4000/speakers/${speaker.id}`, newSpeaker);\n      dispatch([...speakers.slice(0, index), newSpeaker, ...speakers.slice(index + 1)]);\n    } catch (e) {\n      setStatus(REQUEST_STATUS.ERROR);\n      setError(e);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SpeakerSearchBar, {\n      searchQuery: searchQuery,\n      setSearchQuery: setSearchQuery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 27\n    }, this), isError && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"There's an error! Message: \", error.message, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }, this), isSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid md:grid-cols-2 lg:grid-cols-3 grid-cols-1 gap-12\",\n      children: speakers.filter(speaker => {\n        const targetStr = `${speaker.firstName} ${speaker.lastName}`.toLowerCase();\n        return searchQuery.length === 0 ? true : targetStr.includes(searchQuery.toLowerCase());\n      }).map(speaker => /*#__PURE__*/_createElement(Speaker, _objectSpread(_objectSpread({}, speaker), {}, {\n        key: speaker.id,\n        onFavoriteToggle: () => onFavoriteToggleHandler(speaker),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 29\n        },\n        __self: this\n      })))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n\nexport default Speakers;","map":{"version":3,"sources":["/Users/victorzapata/projects/personal/react/conference/components/Speakers/index.jsx"],"names":["axios","useEffect","useReducer","useState","Speaker","SpeakerSearchBar","Speakers","REQUEST_STATUS","LOADING","SUCCESS","ERROR","reducer","state","action","type","speakers","status","dispatch","error","setError","searchQuery","setSearchQuery","isSuccess","isError","isLoading","fetchData","result","get","data","e","toggleFavSpeaker","currentSpeaker","isFavorite","onFavoriteToggleHandler","speaker","index","indexOf","newSpeaker","put","id","slice","setStatus","message","filter","targetStr","firstName","lastName","toLowerCase","length","includes","map"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useEffect, useReducer, useState } from \"react\";\nimport Speaker from \"../Speaker\";\nimport SpeakerSearchBar from \"../SpeakerSearchBar\";\n\nconst Speakers = () => {\n    const REQUEST_STATUS = {\n        LOADING: \"loading\",\n        SUCCESS: \"success\",\n        ERROR: \"error\",\n    };\n\n    const reducer = (state, action) => {\n        switch (action.type) {\n            case \"GET_ALL_SUCCESS\":\n                return { ...state, speakers: action.speakers };\n            case \"UPDATE_STATUS\":\n                return { ...state, status: action.status };\n        }\n    };\n\n    const [{ speakers, status }, dispatch] = useReducer(reducer, []);\n    \n    const [error, setError] = useState({});\n\n    const [searchQuery, setSearchQuery] = useState(\"\");\n\n    const isSuccess = status === REQUEST_STATUS.SUCCESS;\n    const isError = status === REQUEST_STATUS.ERROR;\n    const isLoading = status === REQUEST_STATUS.LOADING;\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const result = await axios.get(\n                    \"http://localhost:4000/speakers\"\n                );\n                dispatch({ speakers: result.data, type: \"GET_ALL_SUCCESS\" });\n                dispatch({ status: REQUEST_STATUS.SUCCESS, type: \"UPDATE_STATUS\" });\n            } catch (e) {\n                dispatch({ status: REQUEST_STATUS.ERROR, type: \"UPDATE_STATUS\" });\n                setError(e);\n            }\n        };\n\n        fetchData();\n    }, []);\n\n    const toggleFavSpeaker = (currentSpeaker) => {\n        return { ...currentSpeaker, isFavorite: !currentSpeaker.isFavorite };\n    };\n\n    const onFavoriteToggleHandler = async (speaker) => {\n        //1. Found the speaker, get the reference\n        //2. Remove it\n        //3. Put the new one at the same place.\n        const index = speakers.indexOf(speaker);\n        const newSpeaker = toggleFavSpeaker(speaker);\n\n        try {\n            await axios.put(\n                `http://localhost:4000/speakers/${speaker.id}`,\n                newSpeaker\n            );\n\n            dispatch([\n                ...speakers.slice(0, index),\n                newSpeaker,\n                ...speakers.slice(index + 1),\n            ]);\n        } catch (e) {\n            setStatus(REQUEST_STATUS.ERROR);\n            setError(e);\n        }\n    };\n\n    return (\n        <div>\n            <SpeakerSearchBar\n                searchQuery={searchQuery}\n                setSearchQuery={setSearchQuery}\n            />\n\n            {isLoading && <div>Loading...</div>}\n            {isError && <div>There's an error! Message: {error.message} </div>}\n            {isSuccess && (\n                <div className=\"grid md:grid-cols-2 lg:grid-cols-3 grid-cols-1 gap-12\">\n                    {speakers\n                        .filter((speaker) => {\n                            const targetStr = `${speaker.firstName} ${speaker.lastName}`.toLowerCase();\n                            return searchQuery.length === 0\n                                ? true\n                                : targetStr.includes(searchQuery.toLowerCase());\n                        })\n                        .map((speaker) => (\n                            <Speaker\n                                {...speaker}\n                                key={speaker.id}\n                                onFavoriteToggle={() =>\n                                    onFavoriteToggleHandler(speaker)\n                                }\n                            />\n                        ))}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Speakers;\n"]},"metadata":{},"sourceType":"module"}