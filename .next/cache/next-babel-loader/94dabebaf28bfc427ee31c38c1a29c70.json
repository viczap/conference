{"ast":null,"code":"import { createElement as _createElement } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/victorzapata/projects/personal/react/conference/components/Speakers/index.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport Speaker from \"../Speaker\";\nimport SpeakerSearchBar from \"../SpeakerSearchBar\";\nimport SpeakerContext from \"./SpeakerContext\";\n\nconst Speakers = () => {\n  const REQUEST_STATUS = {\n    LOADING: \"loading\",\n    SUCCESS: \"success\",\n    ERROR: \"error\"\n  };\n  const {\n    0: status,\n    1: setStatus\n  } = useState(REQUEST_STATUS.LOADING);\n  const {\n    0: speakers,\n    1: setSpeakers\n  } = useState([]);\n  const {\n    0: searchQuery,\n    1: setSearchQuery\n  } = useState(\"\");\n  const isSuccess = status === REQUEST_STATUS.SUCCESS;\n  const isError = status === REQUEST_STATUS.ERROR;\n  const isLoading = status === REQUEST_STATUS.LOADING;\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const result = await axios.get(\"http://localhost:4000/speakerss\");\n        setSpeakers(result.data);\n        setStatus(REQUEST_STATUS.SUCCESS);\n      } catch (e) {\n        setStatus(REQUEST_STATUS.ERROR);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const toggleFavSpeaker = currentSpeaker => {\n    return _objectSpread(_objectSpread({}, currentSpeaker), {}, {\n      isFavorite: !currentSpeaker.isFavorite\n    });\n  };\n\n  const onFavoriteToggleHandler = async speaker => {\n    //1. Found the speaker, get the reference\n    //2. Remove it\n    //3. Put the new one at the same place.\n    const index = speakers.indexOf(speaker);\n    const newSpeaker = toggleFavSpeaker(speaker);\n    await axios.put(`http://localhost:4000/speakers/${speaker.id}`, newSpeaker);\n    setSpeakers([...speakers.slice(0, index), newSpeaker, ...speakers.slice(index + 1)]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SpeakerSearchBar, {\n      searchQuery: searchQuery,\n      setSearchQuery: setSearchQuery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 26\n    }, this) : null, isError ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"There's an error! Message: $\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 24\n    }, this) : null, isSuccess ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid md:grid-cols-2 lg:grid-cols-3 grid-cols-1 gap-12\",\n      children: speakers.filter(speaker => {\n        const targetStr = `${speaker.firstName} ${speaker.lastName}`.toLowerCase();\n        return searchQuery.length === 0 ? true : targetStr.includes(searchQuery.toLowerCase());\n      }).map(speaker => /*#__PURE__*/_createElement(Speaker, _objectSpread(_objectSpread({}, speaker), {}, {\n        key: speaker.id,\n        onFavoriteToggle: () => onFavoriteToggleHandler(speaker),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 29\n        },\n        __self: this\n      })))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\nexport default Speakers;","map":{"version":3,"sources":["/Users/victorzapata/projects/personal/react/conference/components/Speakers/index.jsx"],"names":["axios","useEffect","useState","Speaker","SpeakerSearchBar","SpeakerContext","Speakers","REQUEST_STATUS","LOADING","SUCCESS","ERROR","status","setStatus","speakers","setSpeakers","searchQuery","setSearchQuery","isSuccess","isError","isLoading","fetchData","result","get","data","e","toggleFavSpeaker","currentSpeaker","isFavorite","onFavoriteToggleHandler","speaker","index","indexOf","newSpeaker","put","id","slice","filter","targetStr","firstName","lastName","toLowerCase","length","includes","map"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport Speaker from \"../Speaker\";\nimport SpeakerSearchBar from \"../SpeakerSearchBar\";\nimport SpeakerContext from \"./SpeakerContext\";\n\nconst Speakers = () => {\n    const REQUEST_STATUS = {\n        LOADING: \"loading\",\n        SUCCESS: \"success\",\n        ERROR: \"error\",\n    };\n\n    const [status, setStatus] = useState(REQUEST_STATUS.LOADING);\n    const [speakers, setSpeakers] = useState([]);\n    const [searchQuery, setSearchQuery] = useState(\"\");\n\n    const isSuccess = status === REQUEST_STATUS.SUCCESS;\n    const isError = status === REQUEST_STATUS.ERROR;\n    const isLoading = status === REQUEST_STATUS.LOADING;\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const result = await axios.get(\n                    \"http://localhost:4000/speakerss\"\n                );\n                setSpeakers(result.data);\n                setStatus(REQUEST_STATUS.SUCCESS);\n            } catch(e) {\n                setStatus(REQUEST_STATUS.ERROR);\n            }\n        };\n\n        fetchData();\n    }, []);\n\n    const toggleFavSpeaker = (currentSpeaker) => {\n        return { ...currentSpeaker, isFavorite: !currentSpeaker.isFavorite };\n    };\n\n    const onFavoriteToggleHandler = async (speaker) => {\n        //1. Found the speaker, get the reference\n        //2. Remove it\n        //3. Put the new one at the same place.\n        const index = speakers.indexOf(speaker);\n        const newSpeaker = toggleFavSpeaker(speaker);\n\n        await axios.put(\n            `http://localhost:4000/speakers/${speaker.id}`,\n            newSpeaker\n        );\n\n        setSpeakers([\n            ...speakers.slice(0, index),\n            newSpeaker,\n            ...speakers.slice(index + 1),\n        ]);\n    };\n\n    return (\n        <div>\n            <SpeakerSearchBar\n                searchQuery={searchQuery}\n                setSearchQuery={setSearchQuery}\n            />\n\n            {isLoading ? <div>Loading...</div> : null}\n            {isError ? <div>There's an error! Message: ${} </div> : null}\n            {isSuccess ? (\n                <div className=\"grid md:grid-cols-2 lg:grid-cols-3 grid-cols-1 gap-12\">\n                    {speakers\n                        .filter((speaker) => {\n                            const targetStr = `${speaker.firstName} ${speaker.lastName}`.toLowerCase();\n                            return searchQuery.length === 0\n                                ? true\n                                : targetStr.includes(searchQuery.toLowerCase());\n                        })\n                        .map((speaker) => (\n                            <Speaker\n                                {...speaker}\n                                key={speaker.id}\n                                onFavoriteToggle={() =>\n                                    onFavoriteToggleHandler(speaker)\n                                }\n                            />\n                        ))}\n                </div>\n            ) : null}\n        </div>\n    );\n};\n\nexport default Speakers;\n"]},"metadata":{},"sourceType":"module"}