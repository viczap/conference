{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/victorzapata/projects/personal/react/conference/components/Speakers/index.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport axios from \"axios\";\nimport { useContext, useState } from \"react\";\nimport Speaker from \"../Speaker\";\nimport SpeakerSearchBar from \"../SpeakerSearchBar\";\nimport SpeakerContext from \"./SpeakerContext\";\n\nvar Speakers = function Speakers() {\n  _s();\n\n  var _useState = useState([]),\n      speakers = _useState[0],\n      setSpeakers = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      searchQuery = _useState2[0],\n      setSearchQuery = _useState2[1];\n\n  useEffect(function () {\n    var fetchData = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(\"http://localhost:4000/speakers\");\n\n              case 2:\n                result = _context.sent;\n                setSpeakers(result.data);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function fetchData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchData();\n  }, []);\n\n  var toggleFavSpeaker = function toggleFavSpeaker(currentSpeaker) {\n    return _objectSpread(_objectSpread({}, currentSpeaker), {}, {\n      isFavorite: !currentSpeaker.isFavorite\n    });\n  };\n\n  var onFavoriteToggleHandler = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(speaker) {\n      var index, newSpeaker;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              //1. Found the speaker, get the reference\n              //2. Remove it\n              //3. Put the new one at the same place.\n              index = speakers.indexOf(speaker);\n              newSpeaker = toggleFavSpeaker(speaker);\n              _context2.next = 4;\n              return axios.put(\"http://localhost:4000/speakers/\".concat(speaker.id), newSpeaker);\n\n            case 4:\n              setSpeakers([].concat(_toConsumableArray(speakers.slice(0, index)), [newSpeaker], _toConsumableArray(speakers.slice(index + 1))));\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function onFavoriteToggleHandler(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SpeakerSearchBar, {\n      searchQuery: searchQuery,\n      setSearchQuery: setSearchQuery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid md:grid-cols-2 lg:grid-cols-3 grid-cols-1 gap-12\",\n      children: speakers.filter(function (speaker) {\n        var targetStr = \"\".concat(speaker.firstName, \" \").concat(speaker.lastName).toLowerCase();\n        return searchQuery.length === 0 ? true : targetStr.includes(searchQuery.toLowerCase());\n      }).map(function (speaker) {\n        return /*#__PURE__*/_createElement(Speaker, _objectSpread(_objectSpread({}, speaker), {}, {\n          key: speaker.id,\n          onFavoriteToggle: function onFavoriteToggle() {\n            return onFavoriteToggleHandler(speaker);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          },\n          __self: _this\n        }));\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Speakers, \"xslWBcuoUesbz9NeuZBN5lBYxYo=\");\n\n_c = Speakers;\nexport default Speakers;\n\nvar _c;\n\n$RefreshReg$(_c, \"Speakers\");","map":{"version":3,"sources":["/Users/victorzapata/projects/personal/react/conference/components/Speakers/index.jsx"],"names":["axios","useContext","useState","Speaker","SpeakerSearchBar","SpeakerContext","Speakers","speakers","setSpeakers","searchQuery","setSearchQuery","useEffect","fetchData","get","result","data","toggleFavSpeaker","currentSpeaker","isFavorite","onFavoriteToggleHandler","speaker","index","indexOf","newSpeaker","put","id","slice","filter","targetStr","firstName","lastName","toLowerCase","length","includes","map"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useContext, useState } from \"react\";\nimport Speaker from \"../Speaker\";\nimport SpeakerSearchBar from \"../SpeakerSearchBar\";\nimport SpeakerContext from \"./SpeakerContext\";\n\nconst Speakers = () => {\n\n    \n    const [speakers, setSpeakers] = useState([]);\n    const [searchQuery, setSearchQuery] = useState(\"\");\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const result = await axios.get(\"http://localhost:4000/speakers\");\n            setSpeakers(result.data);\n        };\n\n        fetchData();\n    }, []);\n\n    const toggleFavSpeaker = (currentSpeaker) => {\n        return { ...currentSpeaker, isFavorite: !currentSpeaker.isFavorite };\n    };\n\n    const onFavoriteToggleHandler = async (speaker) => {\n        //1. Found the speaker, get the reference\n        //2. Remove it\n        //3. Put the new one at the same place.\n        const index = speakers.indexOf(speaker);\n        const newSpeaker = toggleFavSpeaker(speaker);\n\n        await axios.put(\n            `http://localhost:4000/speakers/${speaker.id}`,\n            newSpeaker\n        );\n\n        setSpeakers([\n            ...speakers.slice(0, index),\n            newSpeaker,\n            ...speakers.slice(index + 1),\n        ]);\n    };\n\n    return (\n        <div>\n            <SpeakerSearchBar\n                searchQuery={searchQuery}\n                setSearchQuery={setSearchQuery}\n            />\n            <div className=\"grid md:grid-cols-2 lg:grid-cols-3 grid-cols-1 gap-12\">\n                {speakers\n                    .filter((speaker) => {\n                        const targetStr = `${speaker.firstName} ${speaker.lastName}`.toLowerCase();\n                        return searchQuery.length === 0\n                            ? true\n                            : targetStr.includes(searchQuery.toLowerCase());\n                    })\n                    .map((speaker) => (\n                        <Speaker\n                            {...speaker}\n                            key={speaker.id}\n                            onFavoriteToggle={() =>\n                                onFavoriteToggleHandler(speaker)\n                            }\n                        />\n                    ))}\n            </div>\n        </div>\n    );\n};\n\nexport default Speakers;\n"]},"metadata":{},"sourceType":"module"}