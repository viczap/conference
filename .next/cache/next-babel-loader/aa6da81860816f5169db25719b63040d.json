{"ast":null,"code":"import { createElement as _createElement } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/victorzapata/projects/personal/react/conference/components/Speakers/index.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useContext, useState } from \"react\";\nimport Speaker from \"../Speaker\";\nimport SpeakerSearchBar from \"../SpeakerSearchBar\";\nimport SpeakerContext from \"./SpeakerContext\";\n\nconst Speakers = () => {\n  const {\n    0: speakers,\n    1: setSpeakers\n  } = useContext(SpeakerContext);\n  const {\n    0: searchQuery,\n    1: setSearchQuery\n  } = useState(\"\");\n\n  const toggleFavSpeaker = currentSpeaker => {\n    return _objectSpread(_objectSpread({}, currentSpeaker), {}, {\n      isFavorite: !currentSpeaker.isFavorite\n    });\n  };\n\n  const onFavoriteToggleHandler = speaker => {\n    //1. Found the speaker, get the reference\n    //2. Remove it\n    //3. Put the new one at the same place.\n    const index = speakers.indexOf(speaker);\n    const newSpeaker = toggleFavSpeaker(speaker);\n    setSpeakers([...speakers.slice(0, index), newSpeaker, ...speakers.slice(index + 1)]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SpeakerSearchBar, {\n      searchQuery: searchQuery,\n      setSearchQuery: setSearchQuery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid md:grid-cols-2 lg:grid-cols-3 grid-cols-1 gap-12\",\n      children: speakers.filter(speaker => {\n        const targetStr = `${speaker.firstName} ${speaker.lastName}`.toLowerCase();\n        return searchQuery.length === 0 ? true : targetStr.includes(searchQuery.toLowerCase());\n      }).map(speaker => /*#__PURE__*/_createElement(Speaker, _objectSpread(_objectSpread({}, speaker), {}, {\n        key: speaker.id,\n        onFavoriteToggle: () => onFavoriteToggleHandler(speaker),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        },\n        __self: this\n      })))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\nexport default Speakers;","map":{"version":3,"sources":["/Users/victorzapata/projects/personal/react/conference/components/Speakers/index.jsx"],"names":["useContext","useState","Speaker","SpeakerSearchBar","SpeakerContext","Speakers","speakers","setSpeakers","searchQuery","setSearchQuery","toggleFavSpeaker","currentSpeaker","isFavorite","onFavoriteToggleHandler","speaker","index","indexOf","newSpeaker","slice","filter","targetStr","firstName","lastName","toLowerCase","length","includes","map","id"],"mappings":";;;;;;;;;;AAAA,SAASA,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,gBAAP,MAA6B,qBAA7B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACnB,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BP,UAAU,CAACI,cAAD,CAA1C;AACA,QAAM;AAAA,OAACI,WAAD;AAAA,OAAcC;AAAd,MAAgCR,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMS,gBAAgB,GAAIC,cAAD,IAAoB;AACzC,2CAAYA,cAAZ;AAA4BC,MAAAA,UAAU,EAAE,CAACD,cAAc,CAACC;AAAxD;AACH,GAFD;;AAIA,QAAMC,uBAAuB,GAAIC,OAAD,IAAa;AACzC;AACA;AACA;AACA,UAAMC,KAAK,GAAGT,QAAQ,CAACU,OAAT,CAAiBF,OAAjB,CAAd;AACA,UAAMG,UAAU,GAAGP,gBAAgB,CAACI,OAAD,CAAnC;AACAP,IAAAA,WAAW,CAAC,CACR,GAAGD,QAAQ,CAACY,KAAT,CAAe,CAAf,EAAkBH,KAAlB,CADK,EAERE,UAFQ,EAGR,GAAGX,QAAQ,CAACY,KAAT,CAAeH,KAAK,GAAG,CAAvB,CAHK,CAAD,CAAX;AAKH,GAXD;;AAaA,sBACI;AAAA,4BACI,QAAC,gBAAD;AACI,MAAA,WAAW,EAAEP,WADjB;AAEI,MAAA,cAAc,EAAEC;AAFpB;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAK,MAAA,SAAS,EAAC,uDAAf;AAAA,gBACKH,QAAQ,CACJa,MADJ,CACYL,OAAD,IAAa;AACjB,cAAMM,SAAS,GAAI,GAAEN,OAAO,CAACO,SAAU,IAAGP,OAAO,CAACQ,QAAS,EAAzC,CAA2CC,WAA3C,EAAlB;AACA,eAAOf,WAAW,CAACgB,MAAZ,KAAuB,CAAvB,GACD,IADC,GAEDJ,SAAS,CAACK,QAAV,CAAmBjB,WAAW,CAACe,WAAZ,EAAnB,CAFN;AAGH,OANJ,EAOIG,GAPJ,CAOSZ,OAAD,iBACD,eAAC,OAAD,kCACQA,OADR;AAEI,QAAA,GAAG,EAAEA,OAAO,CAACa,EAFjB;AAGI,QAAA,gBAAgB,EAAE,MACdd,uBAAuB,CAACC,OAAD,CAJ/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SARP;AADL;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH,CA/CD;;AAiDA,eAAeT,QAAf","sourcesContent":["import { useContext, useState } from \"react\";\nimport Speaker from \"../Speaker\";\nimport SpeakerSearchBar from \"../SpeakerSearchBar\";\nimport SpeakerContext from \"./SpeakerContext\";\n\nconst Speakers = () => {\n    const [speakers, setSpeakers] = useContext(SpeakerContext);\n    const [searchQuery, setSearchQuery] = useState(\"\");\n\n    const toggleFavSpeaker = (currentSpeaker) => {\n        return { ...currentSpeaker, isFavorite: !currentSpeaker.isFavorite };\n    };\n\n    const onFavoriteToggleHandler = (speaker) => {\n        //1. Found the speaker, get the reference\n        //2. Remove it\n        //3. Put the new one at the same place.\n        const index = speakers.indexOf(speaker);\n        const newSpeaker = toggleFavSpeaker(speaker);\n        setSpeakers([\n            ...speakers.slice(0, index),\n            newSpeaker,\n            ...speakers.slice(index + 1),\n        ]);\n    };\n\n    return (\n        <div>\n            <SpeakerSearchBar\n                searchQuery={searchQuery}\n                setSearchQuery={setSearchQuery}\n            />\n            <div className=\"grid md:grid-cols-2 lg:grid-cols-3 grid-cols-1 gap-12\">\n                {speakers\n                    .filter((speaker) => {\n                        const targetStr = `${speaker.firstName} ${speaker.lastName}`.toLowerCase();\n                        return searchQuery.length === 0\n                            ? true\n                            : targetStr.includes(searchQuery.toLowerCase());\n                    })\n                    .map((speaker) => (\n                        <Speaker\n                            {...speaker}\n                            key={speaker.id}\n                            onFavoriteToggle={() =>\n                                onFavoriteToggleHandler(speaker)\n                            }\n                        />\n                    ))}\n            </div>\n        </div>\n    );\n};\n\nexport default Speakers;\n"]},"metadata":{},"sourceType":"module"}